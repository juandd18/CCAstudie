//ejercisio 1 

create database PatientInfo location '/user/hive/warehouse/patient';

create table patientinfo.patient
(
name struct<name: string, lastname: string>,
address struct<houseno: string,localityname: string,city: string,zip: string>,
phone struct<mobile: string, landline: string>
)
STORED AS SEQUENCEFILE;

create table patientinfo.temppatient
(
name string,
lastname string,
data string,
mobile string,
landline string,
zip string
)
ROW FORMAT DELIMITED 
FIELDS TERMINATED BY '|'
STORED AS TEXTFILE

LOAD DATA LOCAL INPATH '/home/cloudera/problem1data.txt' INTO TABLE patientinfo.temppatient

INSERT INTO patientinfo.patient
SELECT named_struct('name',name,'lastname',lastname), named_struct('houseno',split(data,'\\,')[0],'localityname',split(data,'\\,')[1],'city',split(data,'\\,')[2],'zip',zip), named_struct('mobile',mobile,'landline',landline) from patientinfo.temppatient

//ejercisio 2

64.242.88.10 - - [07/Jun/2016:16:47:46 -0800] "GET /hadoopexam.com/bin/rdiff/Know/ReadmeFirst?rev1=1.5?rev2=1.4 HTTP/1.1" 200 5724
64.242.88.10 - - [07/Jun/2016:16:49:04 -0800] "GET /hadoopexam.com/bin/view/Main/hadoopexam.comGroups?rev=1.2 HTTP/1.1" 200 5162
64.242.88.10 - - [07/Jun/2016:16:50:54 -0800] "GET /hadoopexam.com/bin/rdiff/Main/ConfigurationVariables HTTP/1.1" 200 59679
64.242.88.10 - - [07/Jun/2016:16:52:35 -0800] "GET /hadoopexam.com/bin/edit/Main/Flush_service_name?topicparent=Main.ConfigurationVariables HTTP/1.1" 401 12851
64.242.88.10 - - [07/Jun/2016:16:53:46 -0800] "GET /hadoopexam.com/bin/rdiff/hadoopexam.com/hadoopexam.comRegistration HTTP/1.1" 200 34395
64.242.88.10 - - [07/Jun/2016:16:54:55 -0800] "GET /hadoopexam.com/bin/rdiff/Main/NicholasLee HTTP/1.1" 200 7235
64.242.88.10 - - [07/Jun/2016:16:56:39 -0800] "GET /hadoopexam.com/bin/view/Sandbox/WebHome?rev=1.6 HTTP/1.1" 200 8545
64.242.88.10 hadoopexam_user hdpexam [07/Jun/2016:16:58:54 -0800] "GET /hadoopexam.com/listinfo/administration HTTP/1.1" 200 6459

hdfs dfs -put problem2data.txt /user/ccp/


CREATE TABLE patientinfo.logdata
(
host string,
identity string,
user string,
time string,
request string,
status string,
size string
)
ROW FORMAT SERDE 'org.apache.hadoop.hive.contrib.serde2.RegexSerDe'
WITH SERDEPROPERTIES (
'input.regex'='^(\\S+) (\\S+) (\\S+) \\[([^\\[]*)\\] "(.+)" (\\S+) (\\S+)',
'output.format.string'='%1$s %2$s %3$s %4$s %5$s %6$s %7$s'
)

LOAD DATA INPATH '/user/ccp/problem2data.txt' INTO TABLE patientinfo.logdata

//ejercisio 3

July  3 07:10:54 hadoopexam.com_node01 init: tty (/dev/tty6) main process (1208) killed by TERM signal
July  3 07:11:31 hadoopexam.com_node01 kernel: registered taskstats version 1
July  3 07:11:31 hadoopexam.com_node01 kernel: sr0: scsi3-mmc drive: 32x/32x xa/form2 tray
July  3 07:11:31 hadoopexam.com_node01 kernel: piix4_smbus 0000:00:07.0: SMBus base address uninitialized - upgrade BIOS or use force_addr=0xaddr
July  3 07:11:31 hadoopexam.com_node01 kernel: nf_conntrack version 0.5.0 (7972 buckets, 31888 max)
July  3 07:11:57 hadoopexam.com_node01 kernel: hrtimer: interrupt took 11250457 ns
July  3 07:11:59 hadoopexam.com_node01 ntpd_initres[1705]: host name not found: 0.rhel.pool.ntp.org

^(\\S+)\s*(\\S+) (\\S+) (\\S+) (\\S+): (.+)   

log string following format:

month=jun
day=3
time=07:10:54
node=hadoopexam.com_node01
process=init
log_meg = the rest of the log file

CREATE EXTERNAL TABLE patientinfo.logproblem3
(
day string,
time string,
node string,
process string,
log_meg string
)
PARTITIONED BY (year int, month int)
ROW FORMAT SERDE 'org.apache.hadoop.hive.contrib.serde2.RegexSerDe'
WITH SERDEPROPERTIES(
'input.regex'='^(\\S+)\s*(\\S+) (\\S+) (\\S+) (\\S+): (.+)'
)
LOCATION '/user/ccp/problem3';

ALTER TABLE patientinfo.logproblem3 ADD IF NOT EXISTS PARTITION(year=2017,month=6)
LOCATION '/user/ccp/problem3_1.log'

ALTER TABLE patientinfo.logproblem3 ADD IF NOT EXISTS PARTITION(year=2017,month=6)
LOCATION '/user/ccp/problem3_2.log'

//ejercicio 4

CREATE TABLE patientinfo.tmpproblem5
(
name string,
lname string,
empid string,
loggedindate string,
joiningdate string,
deptid string
)
ROW FORMAT DELIMITED
FIELDS TERMINATED BY ','
TBLPROPERTIES('skip.header.line.count'='1');

LOAD DATA LOCAL INPATH '/home/cloudera/problem5data.txt' INTO TABLE patientinfo.tmpproblem5;

ALTER TABLE patientinfo.tmpproblem5 CHANGE loggedindate loggedindate BIGINT;

CREATE TABLE patientinfo.problem5 AS
select name,lname,empid,MAX(loggedindate),joiningdate,deptid from tmpproblem5 GROUP BY name,lname,empid,joiningdate,deptid


//ejercisio 5

CREATE TABLE patientinfo.problem6Patient
(
id int,
name string,
lname string,
age int,
birthdate string
)
ROW FORMAT DELIMITED
FIELDS TERMINATED BY ','
TBLPROPERTIES(
'skip.header.line.count'='1'
);

LOAD DATA LOCAL INPATH '/home/cloudera/problem6patient.txt' INTO TABLE patientinfo.problem6Patient;

CREATE TABLE patientinfo.problem5healt
(
id int,
lowbp int,
highbp int,
ldl int,
totalcol int,
triglycerides int
)
ROW FORMAT DELIMITED
FIELDS TERMINATED BY ','
TBLPROPERTIES(
'skip.header.line.count'='1'
);

LOAD DATA INPATH '/user/ccp/problem6health.txt' INTO TABLE patientinfo.problem5healt;

CREATE TABLE patientinfo.mergeproblem6 as
SELECT p.id,p.name,p.lname,p.age,p.birthdate,h.lowbp,h.highbp,h.ldl,h.totalcol,h.triglycerides from problem6patient p left outer join problem5healt h on p.id = h.id

different posibles formats and his regex in order to use it with case
--'dd-MMM-yyyy' (\d{1,2})\-(\S{3})\-(\d{4})
--'mm/dd/yyyy' (\S{2})\/(\d{1,2})\/(\d{4})
--'dd/mmm/yyyy' (\d{1,2})\/(\S{3})\/(\d{4})
-- 'mmm-dd yyyy' (\S{3})\-(\d{1,2})\s+(\d{4})

SELECT SELECT p.id,p.name,p.lname,p.age, 
CASE 
WHEN p.birthdate REGEXP '(\\d{1,2})\\-(\\S{3})\\-(\\d{4})' THEN FROM_UNIXTIME(UNIX_TIMESTAMP(p.birthdate,'dd-MMM-yyyy'),'MM/dd/yyyy')
WHEN p.birthdate REGEXP '(\\S{2})\\/(\\d{1,2})\\/(\d{4})' THEN FROM_UNIXTIME(UNIX_TIMESTAMP(p.birthdate,'mm/dd/yyyy'),'MM/dd/yyyy')
WHEN p.birthdate REGEXP '(\\d{1,2})\\-(\\S{3})\\-(\\d{4})' THEN FROM_UNIXTIME(UNIX_TIMESTAMP(p.birthdate,'dd/MMM/yyyy'),'MM/dd/yyyy')
WHEN p.birthdate REGEXP '(\\S{3})\\-(\\d{1,2})\\s+(\\d{4})' THEN FROM_UNIXTIME(UNIX_TIMESTAMP(p.birthdate,'MMM-dd yyyy'),'MM/dd/yyyy')
ELSE
p.birthdate
END,
h.lowbp,h.highbp,h.ldl,h.totalcol,h.triglycerides from problem6patient p left outer join problem5healt h on p.id = h.id

----transform date or get dates
FROM_UNIXTIME(UNIX_TIMESTAMP(p.birthdate,'dd-MMM-yyyy'),'MM/dd/yyyy')

//ejercicio 6

July  3 07:11:31 hadoopexam.com_node01 kernel: registered taskstats version 1

(\\S+)\\s+(\\S+)\\s+(\\S+)\\s+(\\S+)\\s+(\\S+):\\s+(.*)

CREATE TABLE patientinfo.tempproblem6log
(
month string,
day string,
time string,
host string,
proc string,
message string
)
ROW FORMAT SERDE 'org.apache.hadoop.hive.serde2.RegexSerDe'
WITH SERDEPROPERTIES(
'input.regex'='(\\S+)\\s+(\\S+)\\s+(\\S+)\\s+(\\S+)\\s+(\\S+):\\s+(.*)'
)

LOAD DATA LOCAL INPATH '/home/cloudera/ccp/problem6_log1.txt' INTO TABLE patientinfo.tempproblem6log

LOAD DATA LOCAL INPATH '/home/cloudera/ccp/problem6_log2.txt' OVERWRITE INTO TABLE patientinfo.tempproblem6log


CREATE TABLE patientinfo.problem6log
(
time string,
host string,
proc string,
message string
)
PARTITIONED BY (year int,mes string,dia string)

INSERT OVERWRITE TABLE patientinfo.problem6log PARTITION (year=2016,mes,dia)
select time,host,proc,message,month as mes,day as dia from patientinfo.tempproblem6log

//ejercicio 7
1,http://hadoopexam.com/path1/p.php?keyword=hadoop&country=india#Ref1,30/JUN/2016,PUBHADOOPEXAM,GOOGLEADSENSE

keyword=(\S*)&
http:\/+(\w*\.\w*)
country=(\S*)\#

CREATE TABLE patientinfo.tempproblem7
(
ID string,
URL string,
DATE string,
PUBID string,
ADVERTISERID string
)
ROW FORMAT DELIMITED
FIELDS TERMINATED BY ','

LOAD DATA INPATH '/user/ccp/problem7/problem7log.txt' INTO TABLE patientinfo.tempproblem7 

CREATE TABLE patientinfo.problem7
(
id string,
date string,
public string,
advertiserid string,
keyword string
)
PARTITIONED BY (host string, country string)

set hive.exec.dynamic.partition=true;
set hive.exec.dynamic.partition.mode=nostrict;

INSERT INTO TABLE patientinfo.problem7 PARTITION (host,country)
SELECT id,date,pubid,advertiserid, regexp_extract(url,'keyword=(\\S*)&') as keyword, regexp_extract(url,'http:\\/+(\\w*\\.\\w*)') as host,
regexp_extract(url,'country=(\\S*)\\#') as country FROM tempproblem7

//ejercicio 8

ID,URL,DATE,PUBID,ADVERTISERID
1,http://hadoopexam.com/path1/p.php?keyword=hadoop&country=india#Ref1,30/JUN/2016,PUBHADOOPEXAM,GOOGLEADSENSE

http:\/+(\w*\.\w*)
country=(\w*)\#

CREATE TABLE patientinfo.tmpproblem8log
(
id int,
url string,
date string,
pubid string,
advertiserid string
)
ROW FORMAT DELIMITED
FIELDS TERMINATED BY ','
TBLPROPERTIES(
'skip.header.line.count'='1'
)

LOAD DATA LOCAL INPATH '/home/cloudera/ccp/problem8log.txt' INTO TABLE patientinfo.tmpproblem8log

--utilizar parse_url function

CREATE TABLE patientinfo.problem8log AS
select distinct id,date,pubid,advertiserid, 
regexp_extract(url,'http:\\/+(\\w*\\.\\w*)') as domain, 
regexp_extract(url,'country=(\\w*)\\#') as country from tmpproblem8log

CREATE TABLE patientinfo.problem8ads
(
id int,
adname string, 
cpc int
)
ROW FORMAT DELIMITED
FIELDS TERMINATED BY ','
TBLPROPERTIES(
'skip.header.line.count'='1'
)

LOAD DATA LOCAL INPATH '/home/cloudera/ccp/problem8ads.txt' INTO TABLE patientinfo.problem8ads

CREATE TABLE patientinfo.mergeproblem8 AS
SELECT l.id,l.date,l.pubid,l.advertiserid,l.domain,l.country,a.adname,a.cpc FROM problem8log l inner join problem8ads a on a.id = l.id 

SELECT adname,sum(cpc) as sumExpenses from mergeproblem8 group by domain,country,adname order by sumExpenses desc

//ejercicio 9

7,http://hadoopexam.com/path1/p.php?keyword=jee&country=india#Ref1,01/JUL/2016,PUBHADOOPEXAM,GOOGLEADSENSE

keyword=(\S*)\&
country=(\S*)\#
http:\/+(\w*\.\w*)

CREATE TABLE patientinfo.tempproblem9
(
ID int,
URL string,
DATE string,
PUBID string,
ADVERTISERID string
)
ROW FORMAT DELIMITED
FIELDS TERMINATED BY ','
TBLPROPERTIES(
'skip.header.line.count'='1'
)

LOAD DATA LOCAL INPATH '/home/cloudera/ccp/problem9_1.txt' INTO TABLE patientinfo.tempproblem9

LOAD DATA LOCAL INPATH '/home/cloudera/ccp/problem9_2.txt' INTO TABLE patientinfo.tempproblem9

LOAD DATA LOCAL INPATH '/home/cloudera/ccp/problem9_3.txt' INTO TABLE patientinfo.tempproblem9

id int,
date string
pubid string
advertiserid string
keyword string
host string 
country string

CREATE TABLE patientinfo.problem9
(
id int,
date string,
pubid string,
advertiserid string,
keyword string,
host string ,
country string
)


INSERT INTO patientinfo.problem9 
SELECT distinct id,date,lower(pubid) ,lower(ADVERTISERID),
regexp_extract(url,'keyword=(\\S*)\\&') ,
regexp_extract(url,'http:\/+(\\w*\\.\\w*)')  ,
regexp_extract(url,'country=(\\S*)\\#') from tempproblem9
WHERE regexp_extract(url,'http:\/+(\\w*\\.\\w*)') <> ''

//ejercicio 10

CREATE TABLE patientinfo.problem10
(
Id int,
Name string,
LowBP int,
HighBP int,
LDL int,
TotalCol int,
Triglycerides int
)
ROW FORMAT DELIMITED
FIELDS TERMINATED BY ','
TBLPROPERTIES(
'skip.header.line.count'='1'
)

LOAD DATA LOCAL INPATH '/home/cloudera/ccp/problem10.txt' INTO TABLE patientinfo.problem10

ADD JAR /usr/lib/hive/lib/hive-exec.jar

CREATE TEMPORARY FUNCTION exfunction AS 'org.apache.hadoop.hive.ql.udf.generic.GenericUDFLower';

select *,exfunction(name) from patientinfo.problem10

//ejercicio 11

create table employee(id int,name varchar(25),sex varchar(10),age int)

create table salary(id int,salary bigint);

create table patientinfo.tmpemployee
(
id int,
name string,
sex string,
age int
)
row format delimited
fields terminated by ','


create table patientinfo.tmpsalary
(
id int,
salary bigint
)
row format delimited 
fields terminated by ','


load data local inpath '/home/cloudera/ccp/problem11Empleyee.txt' into table patientinfo.tmpemployee

load data local inpath '/home/cloudera/ccp/problem11Salary.txt' into table patientinfo.tmpsalary

create table patientinfo.employee
stored as avro as
select * from tmpemployee

create table patientinfo.salary
stored as avro as
select * from tmpsalary

sqoop export --connect "jdbc:mysql://quickstart.cloudera:3306/retail_db" --username root --password cloudera --hcatalog-database patientinfo --hcatalog-table employee --table employee --columns "id,name,sex,age"
 
sqoop export --connect "jdbc:mysql://quickstart.cloudera:3306/retail_db" --username root --password cloudera --hcatalog-database patientinfo --hcatalog-table salary --table salary --columns "id,salary"

//ejercicio 13

hdfs dfs -getmerge -help

hdfs dfs -mkidr /user/ccp/foldercreation
hdfs dfs -touchz /user/ccp/foldercreation/file

hdfs dfs -put problem131.txt /user/ccp/foldercreation
hdfs dfs -put problem132.txt /user/ccp/foldercreation

hdfs dfs -getmerge  /user/ccp/foldercreation/ /home/cloudera/transfiles/recordsskip.txt

hdfs dfs -put /home/cloudera/transfiles/* /user/ccp/folder

//ejercicio 16

CREATE DATABASE datapropertiestwo 
LOCATION '/user/ccp/dataproperties'
WITH DBPROPERTIES(
'data.file.location'='/user/ccp/dataproperties',
'database.creator'='juan',
'database.created.on'='jul2017'
)

describe database extended datapropertiestwo;

//ejercicio 18

CREATE TABLE patientinfo.problem18
(
name string,
bussinessplace array<string>,
sexage struct<sex:string,age:int>,
fathernamechild map<string,string>
)
ROW FORMAT DELIMITED
FIELDS TERMINATED BY ','
COLLECTION ITEMS TERMINATED BY ':'
MAP KEYS TERMINATED BY ':' ;

//ejercicio 20

sqoop eval --query "show tables;" --connect "jdbc:mysql://quickstart.cloudera:3306/retail_db" --username root --password cloudera
--falta mirar si tengo permisos para leer base de datos

//ejercicio 23
sqoop import --connect "jdbc:mysql://quickstart.cloudera:3306/retail_db" --username root --password cloudera 
--query "select * from order_items oi inner join orders o on oi.order_item_order_id = o.order_id where \$CONDITIONS" 
--target-dir /user/ccp/problem23 --as-avrodatafile -m 1 --split-by order_id

// ejercicio 24
--every time change the value '--last-value'
sqoop import --connect "jdbc:mysql://quickstart.cloudera:3306/retail_db" --username root --password cloudera 
--table departments --target-dir /user/ccp/departments --fields-terminated-by '|' 
--check-column department_id --incremental append --last-value 7

//ejercicio 25 

CREATE DATABASE problem25;

CREATE TABLE problem25.categories
(
category_id int,
category_deparment_id int,
category_name string
)
stored as avro

sqoop import --connect "jdbc:mysql://quickstart.cloudera:3306/retail_db" --username root --password cloudera 
--table categories --target-dir /user/hive/warehouse/problem24.db  --hive-home '/user/hive/warehouse' --hive-import 
--hive-database problem25 --hive-overwrite --hive-table categories 

sqoop import --connect "jdbc:mysql://quickstart.cloudera:3306/retail_db" --username root 
--password cloudera --table categories --target-dir /user/hive/warehouse/problem25.db/ 
--create-hive-table --hive-home '/user/hive/warehouse' --hive-import --hive-database problem25 








