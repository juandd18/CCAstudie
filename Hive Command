//connect to hive in Embedded Mode

//using hive cli (old way)
hive 

//using beeline
beeline -u jdbc:hive2://

//create database
create database if not exists juandavid;

use juandavid;

//hadoop commands in beeline and hive cli
dfs -ls /user/

//create table
create external table orders (orderId int,dateOrder date,value int, state string) 
row format delimited fields terminated by ',' stored as textfile;

//borrar tabla
drop table orders;

create external table orders (orderId int,dateOrder date,value int, state string) 
row format delimited fields terminated by ',' 
stored as textfile location '/user/cca/orders/';

//describe the properties of the table
describe formatted orders;

//output the result in a file results and the log in the query.log (>> => overwrite)
beeline -u jdbc:hive2:// -e 'use juandavid; select * from orders limit 3;' 2>>query.log 1> results

//in case that spark sqlContext does not find hive metastore
cp  /usr/lib/hive/conf/hive-site.xml    /usr/lib/spark/conf/

//use hive with spark sql
spark-shell --master yarn 

//make reference to the database
sqlContext.sql("use juandavid")
//make select 
sqlContext.sql("select * from orders").show()

val table = sqlContext.sql("select * from orders")
table.saveAsTable("ordersSpark")


